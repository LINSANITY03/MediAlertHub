services:
  restapi:
    container_name: restapi
    build: 
      context: ./form_submission
    ports:
      - 8001:8001
    depends_on:
      - redis
      - mongo
      - mongo-express
    volumes:
      - ./form_submission:/form_submission
      - restapi_data:/uploaded_files
    working_dir: /form_submission
    env_file:
      - .env
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
      
  graphql:
    container_name: graphql
    build: 
      context: ./verification_service
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}
      
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresql
      POSTGRES_DB: doctors_db
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
  
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_INIT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_INIT_PASSWORD}

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGODB_URL}
      ME_CONFIG_BASICAUTH: false

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - restapi
      - graphql

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana # persist grafana's internal state
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning # Auto-load datasources and dashboards
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  restapi_data:
  mongo-data:
  grafana_data:
      